// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @default(uuid())
  username    String @unique
  email       String @unique
  password    String 
  createdAt   DateTime     @default(now())
  submissions Submission[]
}

model Problem {
  id          String @id @default(uuid())
  title       String
  description String
  difficulty  String
  createdAt   DateTime @default(now())
  defaultCode DefaultCode[]
  submissions Submission[]
}

model DefaultCode {
  id          String @id @default(uuid())
  language    String
  starterCode String
  problem     Problem @relation(fields: [problemId], references: [id])
  problemId   String
  createdAt   DateTime @default(now())
}

model Submission {
  id          String      @id @default(uuid())
  user        User        @relation(fields: [userId], references: [id])
  userId      String
  problem     Problem     @relation(fields: [problemId], references: [id])
  problemId   String
  code        String      
  language    String      
  status      String      
  output      String?    
  error       String?    
  createdAt   DateTime    @default(now())
  testCases   TestCase[]
}


model TestCase {
  id             String      @id @default(uuid())
  submission     Submission  @relation(fields: [submissionId], references: [id])
  submissionId   String
  input          String     
  expectedOutput String      
  status         String     
  token          String?     
  time           Float?      
  memory         Float?     
  createdAt      DateTime    @default(now())
}
